// Code generated by smithy-go-codegen DO NOT EDIT.

package types

type CloudWatchEventSource string

// Enum values for CloudWatchEventSource
const (
	CloudWatchEventSourceEc2        CloudWatchEventSource = "EC2"
	CloudWatchEventSourceCodeDeploy CloudWatchEventSource = "CODE_DEPLOY"
	CloudWatchEventSourceHealth     CloudWatchEventSource = "HEALTH"
)

// Values returns all known values for CloudWatchEventSource. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (CloudWatchEventSource) Values() []CloudWatchEventSource {
	return []CloudWatchEventSource{
		"EC2",
		"CODE_DEPLOY",
		"HEALTH",
	}
}

type ConfigurationEventResourceType string

// Enum values for ConfigurationEventResourceType
const (
	ConfigurationEventResourceTypeCloudwatchAlarm ConfigurationEventResourceType = "CLOUDWATCH_ALARM"
	ConfigurationEventResourceTypeCloudformation  ConfigurationEventResourceType = "CLOUDFORMATION"
	ConfigurationEventResourceTypeSsmAssociation  ConfigurationEventResourceType = "SSM_ASSOCIATION"
)

// Values returns all known values for ConfigurationEventResourceType. Note that
// this can be expanded in the future, and so it is only as up to date as the
// client. The ordering of this slice is not guaranteed to be stable across
// updates.
func (ConfigurationEventResourceType) Values() []ConfigurationEventResourceType {
	return []ConfigurationEventResourceType{
		"CLOUDWATCH_ALARM",
		"CLOUDFORMATION",
		"SSM_ASSOCIATION",
	}
}

type ConfigurationEventStatus string

// Enum values for ConfigurationEventStatus
const (
	ConfigurationEventStatusInfo  ConfigurationEventStatus = "INFO"
	ConfigurationEventStatusWarn  ConfigurationEventStatus = "WARN"
	ConfigurationEventStatusError ConfigurationEventStatus = "ERROR"
)

// Values returns all known values for ConfigurationEventStatus. Note that this can
// be expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (ConfigurationEventStatus) Values() []ConfigurationEventStatus {
	return []ConfigurationEventStatus{
		"INFO",
		"WARN",
		"ERROR",
	}
}

type FeedbackKey string

// Enum values for FeedbackKey
const (
	FeedbackKeyInsightsFeedback FeedbackKey = "INSIGHTS_FEEDBACK"
)

// Values returns all known values for FeedbackKey. Note that this can be expanded
// in the future, and so it is only as up to date as the client. The ordering of
// this slice is not guaranteed to be stable across updates.
func (FeedbackKey) Values() []FeedbackKey {
	return []FeedbackKey{
		"INSIGHTS_FEEDBACK",
	}
}

type FeedbackValue string

// Enum values for FeedbackValue
const (
	FeedbackValueNotSpecified FeedbackValue = "NOT_SPECIFIED"
	FeedbackValueUseful       FeedbackValue = "USEFUL"
	FeedbackValueNotUseful    FeedbackValue = "NOT_USEFUL"
)

// Values returns all known values for FeedbackValue. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (FeedbackValue) Values() []FeedbackValue {
	return []FeedbackValue{
		"NOT_SPECIFIED",
		"USEFUL",
		"NOT_USEFUL",
	}
}

type LogFilter string

// Enum values for LogFilter
const (
	LogFilterError LogFilter = "ERROR"
	LogFilterWarn  LogFilter = "WARN"
	LogFilterInfo  LogFilter = "INFO"
)

// Values returns all known values for LogFilter. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (LogFilter) Values() []LogFilter {
	return []LogFilter{
		"ERROR",
		"WARN",
		"INFO",
	}
}

type SeverityLevel string

// Enum values for SeverityLevel
const (
	SeverityLevelLow    SeverityLevel = "Low"
	SeverityLevelMedium SeverityLevel = "Medium"
	SeverityLevelHigh   SeverityLevel = "High"
)

// Values returns all known values for SeverityLevel. Note that this can be
// expanded in the future, and so it is only as up to date as the client. The
// ordering of this slice is not guaranteed to be stable across updates.
func (SeverityLevel) Values() []SeverityLevel {
	return []SeverityLevel{
		"Low",
		"Medium",
		"High",
	}
}

type Status string

// Enum values for Status
const (
	StatusIgnore   Status = "IGNORE"
	StatusResolved Status = "RESOLVED"
	StatusPending  Status = "PENDING"
)

// Values returns all known values for Status. Note that this can be expanded in
// the future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Status) Values() []Status {
	return []Status{
		"IGNORE",
		"RESOLVED",
		"PENDING",
	}
}

type Tier string

// Enum values for Tier
const (
	TierDefault      Tier = "DEFAULT"
	TierDotNetCore   Tier = "DOT_NET_CORE"
	TierDotNetWorker Tier = "DOT_NET_WORKER"
	TierDotNetWeb    Tier = "DOT_NET_WEB"
	TierSqlServer    Tier = "SQL_SERVER"
)

// Values returns all known values for Tier. Note that this can be expanded in the
// future, and so it is only as up to date as the client. The ordering of this
// slice is not guaranteed to be stable across updates.
func (Tier) Values() []Tier {
	return []Tier{
		"DEFAULT",
		"DOT_NET_CORE",
		"DOT_NET_WORKER",
		"DOT_NET_WEB",
		"SQL_SERVER",
	}
}
